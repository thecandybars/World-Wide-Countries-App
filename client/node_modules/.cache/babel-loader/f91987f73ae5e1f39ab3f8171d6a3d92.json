{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Activities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport './Activities.css';\nimport SelectCountries from './SelectCountries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Activities() {\n  _s();\n\n  const dispatch = useDispatch();\n  const responseText = useRef();\n  const difficultyLevels = ['Easy', 'Beginner', 'Average', 'Hard', 'Expert']; // FORM VALIDATION\n\n  function validate(input) {\n    let errors = {};\n\n    if (!input.name) {\n      errors.name = 'All fields are required';\n    } else if (/\\`|\\~|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\+|\\=|\\[|\\{|\\]|\\}|\\||\\\\|\\'|\\<|\\,|\\.|\\>|\\?|\\/|\\\"|\\;|\\:|\\s/.test(input.name)) {\n      errors.name = 'No special characters allowed';\n    } else if (!/^[^0-9][a-zA-Z0-9_]+$/.test(input.name)) {\n      errors.name = 'Names cant begin with a number';\n    } // if (!input.difficulty || input.difficulty === '') {\n    //     console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 11 ~ validate ~ input.difficuty\", input.difficuty)\n    //     errors.difficulty = 'Difficuty is required'\n    //        } else if(!/(?=.*[0-9])/.test(input.difficuty)) {\n    //            errors.difficuty = 'Difficuty is invalid'\n    // }\n    // console.log(errors);\n\n\n    return errors;\n  }\n\n  ; // FORM DATA\n\n  const [errors, setErrors] = useState({});\n  const [input, setInput] = useState({\n    name: '',\n    difficulty: '',\n    duration: '',\n    season: '',\n    countries: []\n  });\n\n  function handleInputChange(e) {\n    const currentInputs = { ...input,\n      [e.target.name]: e.target.value\n    };\n    setInput(currentInputs);\n    console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 46 ~ handleInputChange ~ currentInputs\", currentInputs);\n    setErrors(validate(currentInputs));\n  } // DATA SUBMIT\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const response = await axios.post('http://localhost:3001/activities', input);\n    responseText.current.innerHTML = response.status === 200 ? \" Activity *\" + input.name + \"* has been added\" : response.status + \" \" + response.statusText;\n  } // SELECT COUNTRIES\n\n\n  const [selectedCountries, setSelectedCountries] = useState([]);\n\n  const countriesActivity = countries => {\n    setSelectedCountries(countries.filter(c => c.selected === true).map(c => c.id));\n  };\n\n  useEffect(() => {\n    setInput({ ...input,\n      countries: selectedCountries\n    });\n  }, [selectedCountries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: input.name,\n          className: errors.name && 'danger' // errors.username ? 'danger' : ''\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"danger\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"difficulty\",\n          min: \"1\",\n          max: \"5\",\n          value: input.difficulty,\n          className: errors.difficulty && 'danger',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: difficultyLevels[input.difficulty + 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"duration\",\n          value: input.duration,\n          className: errors.duration && 'danger' // errors.username ? 'danger' : ''\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), errors.duration && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"danger\",\n          children: errors.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Season:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"season\",\n          value: input.season,\n          className: errors.season && 'danger' // errors.username ? 'danger' : ''\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), errors.season && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"danger\",\n          children: errors.season\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        disabled: Object.keys(errors).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SelectCountries, {\n        countriesActivity: countriesActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Activities, \"c2/1Ic8P4uBatgGDNWV7BocaAQg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Activities.jsx"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","axios","SelectCountries","Activities","dispatch","responseText","difficultyLevels","validate","input","errors","name","test","setErrors","setInput","difficulty","duration","season","countries","handleInputChange","e","currentInputs","target","value","console","log","handleSubmit","preventDefault","response","post","current","innerHTML","status","statusText","selectedCountries","setSelectedCountries","countriesActivity","filter","c","selected","map","id","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,YAAY,GAAGP,MAAM,EAA3B;AACA,QAAMQ,gBAAgB,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqB,SAArB,EAAgC,MAAhC,EAAwC,QAAxC,CAAzB,CAHiC,CAKjC;;AACA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAI,CAACD,KAAK,CAACE,IAAX,EAAiB;AACbD,MAAAA,MAAM,CAACC,IAAP,GAAc,yBAAd;AACH,KAFD,MAEO,IAAK,+FAA+FC,IAA/F,CAAoGH,KAAK,CAACE,IAA1G,CAAL,EAAuH;AAC1HD,MAAAA,MAAM,CAACC,IAAP,GAAc,+BAAd;AACH,KAFM,MAEA,IAAI,CAAE,wBAAwBC,IAAxB,CAA6BH,KAAK,CAACE,IAAnC,CAAN,EAAiD;AACpDD,MAAAA,MAAM,CAACC,IAAP,GAAc,gCAAd;AACH,KARoB,CAUrB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAAOD,MAAP;AACH;;AAAA,GAxBgC,CA0BjC;;AACA,QAAM,CAACA,MAAD,EAASG,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQK,QAAR,IAAoBhB,QAAQ,CAAC;AAC/Ba,IAAAA,IAAI,EAAE,EADyB;AAE/BI,IAAAA,UAAU,EAAE,EAFmB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,MAAM,EAAE,EAJuB;AAK/BC,IAAAA,SAAS,EAAE;AALoB,GAAD,CAAlC;;AAOA,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1B,UAAMC,aAAa,GAAG,EAAE,GAAGZ,KAAL;AAAY,OAACW,CAAC,CAACE,MAAF,CAASX,IAAV,GAAiBS,CAAC,CAACE,MAAF,CAASC;AAAtC,KAAtB;AACAT,IAAAA,QAAQ,CAACO,aAAD,CAAR;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,yEAAZ,EAAuFJ,aAAvF;AACAR,IAAAA,SAAS,CAACL,QAAQ,CAACa,aAAD,CAAT,CAAT;AACH,GAxCgC,CA0CjC;;;AACA,iBAAeK,YAAf,CAA4BN,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACO,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAW,kCAAX,EAA+CpB,KAA/C,CAAvB;AACAH,IAAAA,YAAY,CAACwB,OAAb,CAAqBC,SAArB,GAAkCH,QAAQ,CAACI,MAAT,KAAoB,GAArB,GAC3B,gBAAgBvB,KAAK,CAACE,IAAtB,GAA6B,kBADF,GAE3BiB,QAAQ,CAACI,MAAT,GAAkB,GAAlB,GAAwBJ,QAAQ,CAACK,UAFvC;AAGH,GAjDgC,CAkDjC;;;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CrC,QAAQ,CAAC,EAAD,CAA1D;;AACA,QAAMsC,iBAAiB,GAAIlB,SAAD,IAAe;AACrCiB,IAAAA,oBAAoB,CAACjB,SAAS,CAACmB,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,IAArC,EAA2CC,GAA3C,CAA+CF,CAAC,IAAIA,CAAC,CAACG,EAAtD,CAAD,CAApB;AACH,GAFD;;AAGA5C,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAAC,EAAE,GAAGL,KAAL;AAAYS,MAAAA,SAAS,EAAEgB;AAAvB,KAAD,CAAR;AACH,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAEjB,KAAK,CAACE,IAA5C;AACI,UAAA,SAAS,EAAED,MAAM,CAACC,IAAP,IAAe,QAD9B,CACwC;AADxC;AAEI,UAAA,QAAQ,EAAEQ;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKKT,MAAM,CAACC,IAAP,iBACG;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,oBAA0BD,MAAM,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,YAAzB;AAAsC,UAAA,GAAG,EAAC,GAA1C;AAA8C,UAAA,GAAG,EAAC,GAAlD;AAAsD,UAAA,KAAK,EAAEF,KAAK,CAACM,UAAnE;AACI,UAAA,SAAS,EAAEL,MAAM,CAACK,UAAP,IAAqB,QADpC;AAEI,UAAA,QAAQ,EAAEI;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,oBAAOZ,gBAAgB,CAACE,KAAK,CAACM,UAAN,GAAmB,CAApB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAEN,KAAK,CAACO,QAAhD;AACI,UAAA,SAAS,EAAEN,MAAM,CAACM,QAAP,IAAmB,QADlC,CAC4C;AAD5C;AAEI,UAAA,QAAQ,EAAEG;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKKT,MAAM,CAACM,QAAP,iBACG;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,oBAA0BN,MAAM,CAACM;AAAjC;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA2BI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,QAAxB;AAAiC,UAAA,KAAK,EAAEP,KAAK,CAACQ,MAA9C;AACI,UAAA,SAAS,EAAEP,MAAM,CAACO,MAAP,IAAiB,QADhC,CAC0C;AAD1C;AAEI,UAAA,QAAQ,EAAEE;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAKKT,MAAM,CAACO,MAAP,iBACG;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,oBAA0BP,MAAM,CAACO;AAAjC;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAqCI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAEyB,MAAM,CAACC,IAAP,CAAYjC,MAAZ,EAAoBkC;AAAlE;AAAA;AAAA;AAAA;AAAA,cArCJ,eAsCI;AAAM,QAAA,GAAG,EAAEtC;AAAX;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA0CI;AAAA,6BACI,QAAC,eAAD;AAAiB,QAAA,iBAAiB,EAAE8B;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GA3GuBhC,U;UACHJ,W;;;KADGI,U","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\n\nimport './Activities.css';\nimport SelectCountries from './SelectCountries';\n\nexport default function Activities() {\n    const dispatch = useDispatch();\n    const responseText = useRef();\n    const difficultyLevels = ['Easy', 'Beginner', 'Average', 'Hard', 'Expert'];\n\n    // FORM VALIDATION\n    function validate(input) {\n        let errors = {};\n        if (!input.name) {\n            errors.name = 'All fields are required';\n        } else if ((/\\`|\\~|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\+|\\=|\\[|\\{|\\]|\\}|\\||\\\\|\\'|\\<|\\,|\\.|\\>|\\?|\\/|\\\"|\\;|\\:|\\s/.test(input.name))) {\n            errors.name = 'No special characters allowed'\n        } else if (!(/^[^0-9][a-zA-Z0-9_]+$/.test(input.name))) {\n            errors.name = 'Names cant begin with a number'\n        }\n\n        // if (!input.difficulty || input.difficulty === '') {\n        //     console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 11 ~ validate ~ input.difficuty\", input.difficuty)\n        //     errors.difficulty = 'Difficuty is required'\n        //        } else if(!/(?=.*[0-9])/.test(input.difficuty)) {\n        //            errors.difficuty = 'Difficuty is invalid'\n        // }\n        // console.log(errors);\n        return errors;\n    };\n\n    // FORM DATA\n    const [errors, setErrors] = useState({});\n    const [input, setInput] = useState({\n        name: '',\n        difficulty: '',\n        duration: '',\n        season: '',\n        countries: [],\n    });\n    function handleInputChange(e) {\n        const currentInputs = { ...input, [e.target.name]: e.target.value };\n        setInput(currentInputs);\n        console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 46 ~ handleInputChange ~ currentInputs\", currentInputs)\n        setErrors(validate(currentInputs));\n    }\n\n    // DATA SUBMIT\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const response = await axios.post('http://localhost:3001/activities', input);\n        responseText.current.innerHTML = (response.status === 200)\n            ? \" Activity *\" + input.name + \"* has been added\"\n            : response.status + \" \" + response.statusText;\n    }\n    // SELECT COUNTRIES\n    const [selectedCountries, setSelectedCountries] = useState([]);\n    const countriesActivity = (countries) => {\n        setSelectedCountries(countries.filter(c => c.selected === true).map(c => c.id));\n    };\n    useEffect(() => {\n        setInput({ ...input, countries: selectedCountries })\n    }, [selectedCountries])\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Name:</label>\n                    <input type=\"text\" name=\"name\" value={input.name}\n                        className={errors.name && 'danger'} // errors.username ? 'danger' : ''\n                        onChange={handleInputChange} />\n                    {errors.name && (\n                        <span className='danger'>{errors.name}</span>\n                    )}\n                </div>\n                <div>\n                    <label>Difficulty:</label>\n                    <input type=\"range\" name=\"difficulty\" min=\"1\" max=\"5\" value={input.difficulty}\n                        className={errors.difficulty && 'danger'} \n                        onChange={handleInputChange} />\n                    <span>{difficultyLevels[input.difficulty + 1]}</span>\n                    {/* {errors.difficulty && ( <span className='danger'>{errors.difficulty}</span> )} */}\n                </div>\n                <div>\n                    <label>Duration:</label>\n                    <input type=\"text\" name=\"duration\" value={input.duration}\n                        className={errors.duration && 'danger'} // errors.username ? 'danger' : ''\n                        onChange={handleInputChange} />\n                    {errors.duration && (\n                        <span className='danger'>{errors.duration}</span>\n                    )}\n                </div>\n                <div>\n                    <label>Season:</label>\n                    <input type=\"text\" name=\"season\" value={input.season}\n                        className={errors.season && 'danger'} // errors.username ? 'danger' : ''\n                        onChange={handleInputChange} />\n                    {errors.season && (\n                        <span className='danger'>{errors.season}</span>\n                    )}\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" disabled={Object.keys(errors).length} />\n                <span ref={responseText}></span>\n            </form>\n\n            <div>\n                <SelectCountries countriesActivity={countriesActivity} />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}