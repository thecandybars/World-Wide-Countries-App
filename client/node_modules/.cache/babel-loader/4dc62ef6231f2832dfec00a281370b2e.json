{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const countryDetails = useSelector(state => state.countryDetails); // Inicialización\n\n  useEffect(() => {\n    dispatch(getCountryDetails(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: style.detail,\n    children: countryDetails.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.countryDetail,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.name,\n        children: countryDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.id,\n        children: [\"(\", countryDetails.id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: style.flag,\n        src: countryDetails.flag,\n        alt: \"flag not found\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.data,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Region : \", countryDetails.region, \"-\", countryDetails.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Capital: \", countryDetails.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Area: \", countryDetails.area > 1000000 ? Math.round(countryDetails.area / 1000000 * 100) / 100 + ' M Km2' // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n          : Number(countryDetails.area).toLocaleString() + ' Km2']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Population: \", Number(countryDetails.population).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), countryDetails.activities && countryDetails.activities.map(act => /*#__PURE__*/_jsxDEV(ActivityCard, {\n        name: act.name,\n        difficulty: act.difficulty,\n        duration: act.duration,\n        season: act.season\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryDetails, \"LuEbhcsWXBVHbEyPdPjZ7++aAwU=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx"],"names":["React","useEffect","useDispatch","useSelector","useParams","getCountryDetails","ActivityCard","style","CountryDetails","dispatch","id","countryDetails","state","detail","length","countryDetail","name","flag","data","region","subregion","capital","area","Math","round","Number","toLocaleString","population","activities","map","act","difficulty","duration","season","loader"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\n\nexport default function CountryDetails() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const countryDetails = useSelector((state) => state.countryDetails);\n\n    // Inicialización\n    useEffect(() => {\n        dispatch(getCountryDetails(id));\n    }, [])\n\n    return (\n        <div id={style.detail}>\n            {\n                countryDetails.length !== 0 ?\n                    (<div id={style.countryDetail}>\n                        {/* {countryDetails.flag_icon} */}\n                        <div id={style.name}>{countryDetails.name}</div>\n                        <div id={style.id}>({countryDetails.id})</div>\n                        <img id={style.flag} src={countryDetails.flag} alt=\"flag not found\" width=\"150px\" />\n                        <div id={style.data}>\n                            <div>Region : {countryDetails.region}-{countryDetails.subregion}</div>\n                            <div>Capital: {countryDetails.capital}</div>\n                            <div>Area: {\n                                countryDetails.area > 1000000\n                                    ? (Math.round((countryDetails.area / 1000000) * 100) / 100 + ' M Km2') // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n                                    : Number(countryDetails.area).toLocaleString() + ' Km2'\n                            }</div>\n                            <div>Population: {Number(countryDetails.population).toLocaleString()}</div>\n                        </div>\n                        {\n                            countryDetails.activities &&\n                            countryDetails.activities.map(act => (\n                                <ActivityCard\n                                    name={act.name}\n                                    difficulty={act.difficulty}\n                                    duration={act.duration}\n                                    season={act.season}\n                                />\n                            ))\n                        }\n                    </div>\n                    ) : <div className={style.loader}></div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}