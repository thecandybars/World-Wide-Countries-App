{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Activities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { difficultyLevels, durationLevels } from './ActivitiesLevels';\nimport { getActivitiesList } from \"../actions\";\nimport SelectCountries from './SelectCountries';\nimport nameIco from \"../icons/text_fields_white_24dp.svg\";\nimport difficultyIco from \"../icons/equalizer_white_24dp.svg\";\nimport durationIco from \"../icons/timelapse_white_24dp.svg\";\nimport seasonIco from \"../icons/date_range_white_24dp.svg\";\nimport countryIco from \"../icons/flag_white_24dp.svg\";\nimport styles from './Activities.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Activities() {\n  _s();\n\n  const responseText = useRef();\n  const dispatch = useDispatch(); /////// INITIALIZATION\n\n  const activitiesList = useSelector(state => state.activitiesList, () => {}); // FORM VALIDATION\n\n  function validate(input) {\n    let errors = {};\n\n    if (!input.name) {\n      errors.name = 'All fields are required';\n    } else if (!/^[a-zA-Z0-9!Ã‘Ã±@#$%&*()_ ;:-]*$/.test(input.name)) {\n      errors.name = 'No special characters allowed';\n    } else if (!/^[a-zA-ZÃ‘Ã±].*/.test(input.name)) {\n      errors.name = 'Names cant begin with a number';\n    } else if (activitiesList.find(act => act.toUpperCase() === input.name.toUpperCase())) {\n      errors.name = `Activity ${input.name} already exists`;\n    }\n\n    if (!input.season) {\n      errors.season = 'All fields are required';\n    }\n\n    return errors;\n  }\n\n  ; // FORM DATA\n\n  const [errors, setErrors] = useState({\n    edited: 'no' // errors arranca con datos para forzar el disable del boton Submit.\n\n  });\n  const [input, setInput] = useState({\n    name: '',\n    difficulty: '3',\n    duration: '3',\n    season: '',\n    countries: []\n  });\n\n  function handleInputChange(e) {\n    setErrors({ ...errors\n    });\n    const currentInputs = { ...input,\n      [e.target.name]: e.target.value\n    };\n    currentInputs.name = currentInputs.name[0].toUpperCase() + currentInputs.name.slice(1);\n    console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 55 ~ handleInputChange ~ currentInputs\", currentInputs);\n    setInput(currentInputs);\n    setErrors(validate(currentInputs));\n  } // DATA SUBMIT\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const response = await axios.post('http://localhost:3001/activities', input);\n    responseText.current.innerHTML = response.status === 200 ? \" Activity *\" + input.name + \"* has been added\" : response.status + \" \" + response.statusText;\n    setTimeout(() => {\n      window.location.reload();\n    }, 1500);\n  } // SELECT COUNTRIES ACTIVITY\n\n\n  const [countriesPerActivity, setCountriesPerActivity] = useState([]);\n\n  const countriesActivity = countries => {\n    setCountriesPerActivity(countries.filter(c => c.selected === true));\n  };\n\n  useEffect(() => {\n    // setInput({ ...input, countries: countriesPerActivity.map(c => c.id) })\n    setInput(input => ({ ...input,\n      countries: countriesPerActivity.map(c => c.id)\n    }));\n  }, [countriesPerActivity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: styles.gridContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: nameIco,\n          alt: \"ActName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: input.name,\n        onChange: handleInputChange,\n        placeholder: \"Give a name to this activity...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.danger,\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: difficultyIco,\n          alt: \"DifLevel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles,\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"difficulty\",\n        min: \"1\",\n        max: \"5\",\n        value: input.difficulty,\n        className: errors.difficulty && 'danger',\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.sliderVal,\n        children: difficultyLevels[input.difficulty - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: durationIco,\n          alt: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"duration\",\n        min: \"1\",\n        max: \"8\",\n        value: input.duration,\n        className: errors.duration && 'danger',\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.sliderVal,\n        children: durationLevels[input.duration - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: seasonIco,\n          alt: \"Season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"season\",\n        onChange: handleInputChange,\n        defaultValue: \"Choose a season\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"Choose a season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Spring\",\n          children: \"Spring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Summer\",\n          children: \"Summer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Autumn\",\n          children: \"Autumn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Winter\",\n          children: \"Winter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.danger,\n        children: errors.season\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: countryIco,\n          alt: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: styles.selectCountries,\n        children: countriesPerActivity.length !== 0 && countriesPerActivity.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.country,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 2.1 + 'em'\n            },\n            children: c.flag_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 0.7 + 'em'\n            },\n            children: c.name.length > 12 ? c.name.slice(0, 12) + '...' : c.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add activity\",\n          className: styles.button,\n          id: !Object.keys(errors).length ? styles.buttonHover : '' // Remove hover if disabled \n          ,\n          disabled: Object.keys(errors).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: responseText,\n      className: styles.afterSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(SelectCountries, {\n        countriesActivity: countriesActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Activities, \"mxNB2WPqTAwSAXmWlRP1GQPKweU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Activities.jsx"],"names":["React","useEffect","useState","useRef","axios","useDispatch","useSelector","difficultyLevels","durationLevels","getActivitiesList","SelectCountries","styles","Activities","responseText","dispatch","activitiesList","state","validate","input","errors","name","test","find","act","toUpperCase","season","setErrors","edited","setInput","difficulty","duration","countries","handleInputChange","e","currentInputs","target","value","slice","console","log","handleSubmit","preventDefault","response","post","current","innerHTML","status","statusText","setTimeout","window","location","reload","countriesPerActivity","setCountriesPerActivity","countriesActivity","filter","c","selected","map","id","gridContainer","nameIco","danger","difficultyIco","sliderVal","durationIco","seasonIco","countryIco","selectCountries","length","country","fontSize","flag_icon","button","Object","keys","buttonHover","afterSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { difficultyLevels, durationLevels } from './ActivitiesLevels'\nimport { getActivitiesList } from \"../actions\";\nimport SelectCountries from './SelectCountries';\nimport nameIco from '../icons/text_fields_white_24dp.svg'\nimport difficultyIco from '../icons/equalizer_white_24dp.svg'\nimport durationIco from '../icons/timelapse_white_24dp.svg'\nimport seasonIco from '../icons/date_range_white_24dp.svg'\nimport countryIco from '../icons/flag_white_24dp.svg'\nimport styles from './Activities.module.css';\n\nexport default function Activities() {\n    const responseText = useRef();\n    const dispatch = useDispatch();\n\n    /////// INITIALIZATION\n    const activitiesList = useSelector((state) => state.activitiesList, () => { });\n\n    // FORM VALIDATION\n    function validate(input) {\n        let errors = {};\n\n        if (!input.name) {\n            errors.name = 'All fields are required';\n        } else if (!(/^[a-zA-Z0-9!Ã‘Ã±@#$%&*()_ ;:-]*$/.test(input.name))) {\n            errors.name = 'No special characters allowed'\n        } else if (!(/^[a-zA-ZÃ‘Ã±].*/.test(input.name))) {\n            errors.name = 'Names cant begin with a number'\n        } else if (activitiesList.find(act => act.toUpperCase() === input.name.toUpperCase())) {\n            errors.name = `Activity ${input.name} already exists`\n        }\n\n        if (!input.season) { errors.season = 'All fields are required'; }\n\n        return errors;\n    };\n\n    // FORM DATA\n    const [errors, setErrors] = useState({\n        edited: 'no',   // errors arranca con datos para forzar el disable del boton Submit.\n    });\n    const [input, setInput] = useState({\n        name: '',\n        difficulty: '3',\n        duration: '3',\n        season: '',\n        countries: [],\n    });\n    function handleInputChange(e) {\n        setErrors({ ...errors });\n        const currentInputs = { ...input, [e.target.name]: e.target.value };\n        currentInputs.name = currentInputs.name[0].toUpperCase() + currentInputs.name.slice(1);\n        console.log(\"ðŸš€ ~ file: Activities.jsx ~ line 55 ~ handleInputChange ~ currentInputs\", currentInputs)\n        setInput(currentInputs);\n        setErrors(validate(currentInputs));\n    }\n\n    // DATA SUBMIT\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const response = await axios.post('http://localhost:3001/activities', input);\n        responseText.current.innerHTML = (response.status === 200)\n            ? \" Activity *\" + input.name + \"* has been added\"\n            : response.status + \" \" + response.statusText;\n        setTimeout(() => {\n            window.location.reload();\n        }, 1500);\n    }\n\n    // SELECT COUNTRIES ACTIVITY\n    const [countriesPerActivity, setCountriesPerActivity] = useState([]);\n    const countriesActivity = (countries) => {\n        setCountriesPerActivity(countries.filter(c => c.selected === true));\n    };\n    useEffect(() => {\n        // setInput({ ...input, countries: countriesPerActivity.map(c => c.id) })\n        setInput(input => ({ ...input, countries: countriesPerActivity.map(c => c.id) }))\n    }, [countriesPerActivity])\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} id={styles.gridContainer}>\n\n                <span className={styles.name}>\n                    <img src={nameIco} alt=\"ActName\" />\n                    <label>Name</label>\n                </span>\n                <input type=\"text\" name=\"name\" value={input.name}\n                    onChange={handleInputChange} placeholder='Give a name to this activity...' />\n                <span className={styles.danger}>{errors.name}</span>\n\n                <span className={styles.name}>\n                    <img src={difficultyIco} alt=\"DifLevel\" />\n                    <label className={styles}>Difficulty</label>\n                </span>\n                <input type=\"range\" name=\"difficulty\" min=\"1\" max=\"5\" value={input.difficulty}\n                    className={errors.difficulty && 'danger'}\n                    onChange={handleInputChange} />\n                <span className={styles.sliderVal}>{difficultyLevels[input.difficulty - 1]}</span>\n\n                <span className={styles.name}>\n                    <img src={durationIco} alt=\"Duration\" />\n                    <label>Duration</label>\n                </span>\n                <input type=\"range\" name=\"duration\" min='1' max='8' value={input.duration}\n                    className={errors.duration && 'danger'}\n                    onChange={handleInputChange} />\n                <span className={styles.sliderVal}>{durationLevels[input.duration - 1]}</span>\n\n                <span className={styles.name}>\n                    <img src={seasonIco} alt=\"Season\" />\n                    <label>Season</label>\n                </span>\n                <select name=\"season\" onChange={handleInputChange} defaultValue='Choose a season'>\n                    <option disabled >Choose a season</option>\n                    <option value='Spring'>Spring</option>\n                    <option value='Summer'>Summer</option>\n                    <option value='Autumn'>Autumn</option>\n                    <option value='Winter'>Winter</option>\n                </select>\n                <span className={styles.danger}>{errors.season}</span>\n\n                <span className={styles.name}>\n                    <img src={countryIco} alt=\"Country\" />\n                    <label>Countries</label>\n                </span>\n                <span id={styles.selectCountries}>\n                    {\n                        countriesPerActivity.length !== 0 &&\n                        countriesPerActivity.map(c => (\n                            <div key={c.id} className={styles.country}>\n                                <div style={{ fontSize: 2.1 + 'em' }}>{c.flag_icon}</div>\n                                <div style={{ fontSize: 0.7 + 'em' }}>{c.name.length > 12 ? c.name.slice(0, 12) + '...' : c.name}</div>\n                            </div>\n                        ))\n                    }\n                </span>\n                <span></span>\n\n                <span></span>\n                <div>\n                    <input type=\"submit\" value=\"Add activity\"\n                        className={styles.button}\n                        id={!Object.keys(errors).length ? styles.buttonHover : ''}  // Remove hover if disabled \n                        disabled={Object.keys(errors).length}\n                    />\n                </div>\n            </form>\n            <div ref={responseText} className={styles.afterSubmit}></div>\n\n            <div> {<SelectCountries countriesActivity={countriesActivity} />} </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}