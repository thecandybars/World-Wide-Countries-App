{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport './CountryDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const countryDetails = useSelector(state => state.countryDetails); // Inicialización\n\n  useEffect(() => {\n    dispatch(getCountryDetails(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countryDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countryDetail\",\n      children: [countryDetails.flag_icon, /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: countryDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: countryDetails.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: countryDetails.flag,\n        alt: \"flag not found\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Regi\\xF3n : \", countryDetails.region, \"-\", countryDetails.subregion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Capital: \", countryDetails.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\xC1rea: \", countryDetails.area > 1000000 ? Math.round(countryDetails.area / 1000000 * 100) / 100 + ' M Km2' // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n        : countryDetails.area.toLocaleString(undefined, {\n          minimumFractionDigits: 0\n        }) + ' Km2']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Poblaci\\xF3n: \", countryDetails.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), countryDetails.activities && countryDetails.activities.map(act => /*#__PURE__*/_jsxDEV(ActivityCard, {\n        name: act.name,\n        difficulty: act.difficulty,\n        duration: act.duration,\n        season: act.season\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cagando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryDetails, \"LuEbhcsWXBVHbEyPdPjZ7++aAwU=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","getCountryDetails","ActivityCard","CountryDetails","dispatch","id","countryDetails","state","flag_icon","name","flag","region","subregion","capital","area","Math","round","toLocaleString","undefined","minimumFractionDigits","population","activities","map","act","difficulty","duration","season"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASL,SAAS,EAAxB;AAEA,QAAMM,cAAc,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC,CAJqC,CAMrC;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACH,iBAAiB,CAACI,EAAD,CAAlB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cAEQC,cAAc,gBACT;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,iBACIA,cAAc,CAACE,SADnB,eAEG;AAAA,kBAAKF,cAAc,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA,kBAAKH,cAAc,CAACD;AAApB;AAAA;AAAA;AAAA;AAAA,cAHH,eAIG;AAAK,QAAA,GAAG,EAAEC,cAAc,CAACI,IAAzB;AAA+B,QAAA,GAAG,EAAC,gBAAnC;AAAoD,QAAA,KAAK,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJH,eAKG;AAAA,mCAAcJ,cAAc,CAACK,MAA7B,OAAsCL,cAAc,CAACM,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAMG;AAAA,gCAAcN,cAAc,CAACO,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cANH,eAOG;AAAA,gCACIP,cAAc,CAACQ,IAAf,GAAsB,OAAtB,GACOC,IAAI,CAACC,KAAL,CAAYV,cAAc,CAACQ,IAAf,GAAsB,OAAvB,GAAgC,GAA3C,IAAgD,GAAhD,GAAsD,QAD7D,CACuE;AADvE,UAEMR,cAAc,CAACQ,IAAf,CAAoBG,cAApB,CAAmCC,SAAnC,EAA8C;AAAEC,UAAAA,qBAAqB,EAAE;AAAzB,SAA9C,IAA8E,MAHxF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPH,eAcG;AAAA,qCAAgBb,cAAc,CAACc,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAdH,EAgBOd,cAAc,CAACe,UAAf,IACAf,cAAc,CAACe,UAAf,CAA0BC,GAA1B,CAA8BC,GAAG,iBAC7B,QAAC,YAAD;AACI,QAAA,IAAI,EAAEA,GAAG,CAACd,IADd;AAEI,QAAA,UAAU,EAAEc,GAAG,CAACC,UAFpB;AAGI,QAAA,QAAQ,EAAED,GAAG,CAACE,QAHlB;AAII,QAAA,MAAM,EAAEF,GAAG,CAACG;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,CAjBP;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBA4BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA9CuBvB,c;UACHL,W,EACFE,S,EAEQD,W;;;KAJHI,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport './CountryDetails.css';\n\nexport default function CountryDetails() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const countryDetails = useSelector((state) => state.countryDetails);\n\n    // Inicialización\n    useEffect(() => {\n        dispatch(getCountryDetails(id));\n    }, [])\n\n    return (\n        <div>\n            {\n                countryDetails ?\n                    (<div id='countryDetail'>\n                        {countryDetails.flag_icon}\n                        <h4>{countryDetails.name}</h4>\n                        <h3>{countryDetails.id}</h3>\n                        <img src={countryDetails.flag} alt=\"flag not found\" width=\"150px\" />\n                        <h4>Región : {countryDetails.region}-{countryDetails.subregion}</h4>\n                        <h4>Capital: {countryDetails.capital}</h4>\n                        <h4>Área: {\n                            countryDetails.area > 1000000 \n                                ? (Math.round((countryDetails.area / 1000000)*100)/100 + ' M Km2') // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n                                : countryDetails.area.toLocaleString(undefined, { minimumFractionDigits: 0 }) + ' Km2'\n                        }</h4>\n                        {/* <h4>Área: {countryDetails.area.toLocaleString(undefined, { minimumFractionDigits: 0 })}</h4> */}\n                        {/* leave undefined to use the visitor's browser locale or a string like 'en-US' to override it. */}\n                        <h4>Población: {countryDetails.population}</h4>\n                        {\n                            countryDetails.activities &&\n                            countryDetails.activities.map(act => (\n                                <ActivityCard\n                                    name={act.name}\n                                    difficulty={act.difficulty}\n                                    duration={act.duration}\n                                    season={act.season}\n                                />\n                            ))\n                        }\n                    </div>\n                    ) : <h2>Cagando...</h2>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}