{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, orderCountries, filterCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); // LOCAL STATES\n  // const [order, setOrder] = useState(null);\n  // const [filter, setFilter] = useState({ region: \"\", activity: \"\" });\n  // const [countries, setCountries] = useState([]);\n\n  const countries = useSelector(state => state.countries); // const activitiesList = useSelector((state) => state.activitiesList);\n  // Paginado\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = page => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);else setCountriesXPage(10);\n  }; // useEffect(() => {\n  //   dispatch(orderCountries(order, countries)); // order=id del botón: discrimina la acción\n  //   dispatch(filterCountries(filter, countries));\n  // }, [order, filter]);\n  // Inicialización (con [] vacio)\n\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, []); // Inicialización forzada con botón\n\n  function handleReloadDB(e) {\n    e.preventDefault();\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  } // function getRegionsList() {\n  //   return countries\n  //     .map((obj) => obj.region) // convierte el obj en arr\n  //     .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  // }\n  // function handleOrder(e) {\n  //   setOrder(e.target.id);\n  // }\n  // function handleFilter(e) {\n  //   setFilter({ ...filter, [e.target.name]: e.target.value }); // { region:'Asia', activity:'Cagar' }\n  // }\n  // La barra de botones se podria modularizar\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/activity\",\n      children: \"Crear actividad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home de Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleReloadDB(e);\n      },\n      children: \"reload DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Pages, {\n        countriesXPage: countriesXPage,\n        totalCountries: countries.length,\n        pages: pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"countries\",\n        children: pageCountries ? pageCountries.map(country => {\n          return /*#__PURE__*/_jsxDEV(CountryCard, {\n            name: country.name,\n            region: country.region,\n            flag: country.flag\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No hay paises para mostrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ZecCuau74nE3oU9N2b84gmbD3fA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getCountries","getActivitiesList","orderCountries","filterCountries","Link","CountryCard","Pages","Home","dispatch","countries","state","currentPage","setCurrentPage","countriesXPage","setCountriesXPage","lastCountry","firstCountry","pageCountries","slice","pages","page","handleReloadDB","e","preventDefault","length","map","country","name","region","flag","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, orderCountries, filterCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  // LOCAL STATES\n  // const [order, setOrder] = useState(null);\n  // const [filter, setFilter] = useState({ region: \"\", activity: \"\" });\n  // const [countries, setCountries] = useState([]);\n\n  const countries = useSelector((state) => state.countries);\n  // const activitiesList = useSelector((state) => state.activitiesList);\n\n  // Paginado\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n  const pages = (page) => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);\n    else setCountriesXPage(10);\n  };\n\n  // useEffect(() => {\n  //   dispatch(orderCountries(order, countries)); // order=id del botón: discrimina la acción\n  //   dispatch(filterCountries(filter, countries));\n  // }, [order, filter]);\n\n  // Inicialización (con [] vacio)\n  useEffect(()=>{\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  },[])\n  // Inicialización forzada con botón\n  function handleReloadDB(e) {\n    e.preventDefault();\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }\n\n  // function getRegionsList() {\n  //   return countries\n  //     .map((obj) => obj.region) // convierte el obj en arr\n  //     .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  // }\n\n  // function handleOrder(e) {\n  //   setOrder(e.target.id);\n  // }\n\n  // function handleFilter(e) {\n  //   setFilter({ ...filter, [e.target.name]: e.target.value }); // { region:'Asia', activity:'Cagar' }\n  // }\n\n  // La barra de botones se podria modularizar\n  return (\n    <div>\n      <Link to=\"/activity\">Crear actividad</Link>\n      <h1>Home de Countries</h1>\n      <button onClick={(e) => { handleReloadDB(e) }}>reload DB</button>\n      <div>\n        {/* <div>\n          <input type=\"radio\" id=\"asc\" name=\"order\" value=\"ASC\" onChange={handleOrder} />\n          <label>Asc</label>\n          <input type=\"radio\" id=\"des\" name=\"order\" value=\"DES\" onChange={handleOrder} />\n          <label>Des</label>\n          <input type=\"radio\" id=\"pop\" name=\"order\" value=\"Pop\" onChange={handleOrder} />\n          <label>Pop</label>\n        </div> */}\n\n        {/* <label>Search:</label>\n        <input type=\"text\" id=\"search\" name=\"search\"></input>\n        <button>Serch</button> */}\n\n        {/* <select name=\"region\" onChange={handleFilter}>\n          <option id=\"all\" value=\"all\"></option>\n          <option id=\"Asia\" value=\"Asia\">Asia</option>\n          <option id=\"Oceania\" value=\"Oceania\">Oceania</option>\n          <option id=\"Americas\" value=\"Americas\">Americas</option>\n          <option id=\"Europe\" value=\"Europe\">Europe</option>\n          <option id=\"Africa\" value=\"Africa\">Africa</option>\n          <option id=\"Antartic\" value=\"Antartic\">Antartic</option>\n        </select> */}\n\n        {/* <select name=\"activity\" id=\"\">\n          {\n            activitiesList && activitiesList.map((act) => {\n              return (<option value={act} key={act}>{act}</option>);\n            })}\n        </select> */}\n\n        <Pages\n          countriesXPage={countriesXPage}\n          totalCountries={countries.length}\n          pages={pages}\n        />\n\n        <div id=\"countries\">\n          {pageCountries ?\n            (pageCountries.map((country) => {\n              return (\n                <CountryCard\n                  key={country.id}\n                  name={country.name}\n                  region={country.region}\n                  flag={country.flag}\n                />\n              );\n            }))\n            : (<h2>No hay paises para mostrar</h2>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}