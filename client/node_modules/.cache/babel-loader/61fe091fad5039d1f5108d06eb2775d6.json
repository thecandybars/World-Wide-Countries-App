{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/SelectCountries.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectCountries(_ref) {\n  _s();\n\n  let {\n    countriesActivity\n  } = _ref;\n  console.log(\"ðŸš€ ~ file: SelectCountries.jsx ~ line 7 ~ SelectCountries ~ countriesActivity\", countriesActivity);\n  const countries = useSelector(state => state.countries, () => {});\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [regionList, setRegionList] = useState([]); // INIT AFTER LOADING\n\n  useEffect(() => {\n    if (selectedCountries.length === 0) {\n      //// FILL REGION LIST\n      setRegionList(countries.map(obj => obj.region) // convierte el obj en arr\n      .filter((item, index, arr) => arr.indexOf(item) === index)); // filtra repeticiones);\n      //// FILL SELECTED COUNTRIES\n\n      const arr = [];\n      countries.forEach(c => {\n        const obj = {\n          id: c.id,\n          name: c.name,\n          region: c.region,\n          flag_icon: c.flag_icon,\n          selected: false\n        };\n        arr.push(obj);\n      });\n      arr.sort(function (a, b) {\n        const A = a.name.toUpperCase();\n        const B = b.name.toUpperCase();\n        if (A < B) return -1;\n        if (A > B) return 1;\n        return 0;\n      });\n      setSelectedCountries(arr); // setSelectedCountries(countries.map(c => (\n      //     {\n      //         name: c.name,\n      //         region: c.region,\n      //         flag_icon: c.flag_icon,\n      //         selected: false\n      //     }\n      // )))\n    }\n  }, [countries]); // SELECTED COUNTRIES\n\n  useEffect(() => {}, [selectedCountries]);\n\n  function checkBoxHandler(e) {\n    const selectedCountriesCopy = [...selectedCountries];\n    selectedCountriesCopy.forEach(c => c.id === e.target.name && (c.selected = e.target.checked));\n    setSelectedCountries(selectedCountriesCopy);\n    countriesActivity(selectedCountries);\n  } // useEffect(() => {\n  //     console.log(\"ðŸš€ ~ file: SelectCountries.jsx ~ line 56 ~ SelectCountries ~ selectedCountries\", selectedCountries)\n  // }, [selectedCountries])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedCountries && regionList.map(region => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), selectedCountries.map(c => c.region === region && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: c.id,\n            onChange: checkBoxHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), c.name, c.flag_icon]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 30\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectCountries, \"uemlmvYWcesBslEmUtn4kTCS/78=\", false, function () {\n  return [useSelector];\n});\n\n_c = SelectCountries;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCountries\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/SelectCountries.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","SelectCountries","countriesActivity","console","log","countries","state","selectedCountries","setSelectedCountries","regionList","setRegionList","length","map","obj","region","filter","item","index","arr","indexOf","forEach","c","id","name","flag_icon","selected","push","sort","a","b","A","toUpperCase","B","checkBoxHandler","e","selectedCountriesCopy","target","checked"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect, } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nexport default function SelectCountries({countriesActivity}) {\n    console.log(\"ðŸš€ ~ file: SelectCountries.jsx ~ line 7 ~ SelectCountries ~ countriesActivity\", countriesActivity)\n    const countries = useSelector(state => state.countries, () => { });\n\n    const [selectedCountries, setSelectedCountries] = useState([]);\n    const [regionList, setRegionList] = useState([]);\n\n    // INIT AFTER LOADING\n    useEffect(() => {\n        if (selectedCountries.length === 0) {\n            //// FILL REGION LIST\n            setRegionList(countries\n                .map((obj) => obj.region) // convierte el obj en arr\n                .filter((item, index, arr) => arr.indexOf(item) === index)); // filtra repeticiones);\n            //// FILL SELECTED COUNTRIES\n            const arr = [];\n            countries.forEach(c => {\n                const obj = {\n                    id: c.id,\n                    name: c.name,\n                    region: c.region,\n                    flag_icon: c.flag_icon,\n                    selected: false\n                };\n                arr.push(obj);\n            })\n            arr.sort(function (a, b) {\n                const A = a.name.toUpperCase();\n                const B = b.name.toUpperCase();\n                if (A < B) return -1;\n                if (A > B) return 1;\n                return 0;\n            });\n            setSelectedCountries(arr);\n            // setSelectedCountries(countries.map(c => (\n            //     {\n            //         name: c.name,\n            //         region: c.region,\n            //         flag_icon: c.flag_icon,\n            //         selected: false\n            //     }\n            // )))\n        }\n    }, [countries]);\n\n    // SELECTED COUNTRIES\n    useEffect(() => {\n\n    },[selectedCountries])\n\n    function checkBoxHandler(e) {\n        const selectedCountriesCopy = [...selectedCountries];\n        selectedCountriesCopy.forEach(c => c.id === e.target.name && (c.selected = e.target.checked))\n        setSelectedCountries(selectedCountriesCopy);\n        countriesActivity(selectedCountries);\n    }\n    // useEffect(() => {\n    //     console.log(\"ðŸš€ ~ file: SelectCountries.jsx ~ line 56 ~ SelectCountries ~ selectedCountries\", selectedCountries)\n    // }, [selectedCountries])\n\n    return (\n        <div><ul>\n            {\n                selectedCountries &&\n                regionList.map(region =>\n                    <div>\n                        <h2>{region}</h2>\n                        {selectedCountries.map(c =>\n                            c.region === region &&\n                            (<li key={c.id}>\n                                <input type='checkbox' name={c.id} onChange={checkBoxHandler} />\n                                {c.name}\n                                {c.flag_icon}\n                            </li>)\n                        )}\n                    </div>\n                )\n            }\n\n\n        </ul></div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}