{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const countryDetails = useSelector(state => state.countryDetails); // InicializaciÃ³n\n\n  useEffect(() => {\n    dispatch(getCountryDetails(id));\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), countryDetails.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.detail,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.name,\n        children: countryDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.id,\n        children: [\"(\", countryDetails.id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: style.flag,\n        src: countryDetails.flag,\n        alt: \"flag not found\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.continent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.region,\n          children: countryDetails.region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), countryDetails.subregion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.subregion,\n          children: countryDetails.subregion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.dataGrid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.data,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataLabel,\n            children: \"Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataValue,\n            children: countryDetails.capital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.data,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataLabel,\n            children: \"Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataValue,\n            children: countryDetails.area > 1000000 ? Math.round(countryDetails.area / 1000000 * 100) / 100 + ' M Km2' // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n            : Number(countryDetails.area).toLocaleString() + ' Km2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.data,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataLabel,\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.dataValue,\n            children: Number(countryDetails.population).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.activities,\n        children: countryDetails.activities && countryDetails.activities.map(act => /*#__PURE__*/_jsxDEV(ActivityCard, {\n          name: act.name,\n          difficulty: act.difficulty,\n          duration: act.duration,\n          season: act.season\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryDetails, \"LuEbhcsWXBVHbEyPdPjZ7++aAwU=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx"],"names":["React","useEffect","useDispatch","useSelector","useParams","getCountryDetails","ActivityCard","style","Nav","CountryDetails","dispatch","id","countryDetails","state","length","detail","name","flag","continent","region","subregion","dataGrid","data","dataLabel","dataValue","capital","area","Math","round","Number","toLocaleString","population","activities","map","act","difficulty","duration","season","loader"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\nimport Nav from \"./Nav\";\n\nexport default function CountryDetails() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const countryDetails = useSelector((state) => state.countryDetails);\n\n    // InicializaciÃ³n\n    useEffect(() => {\n        dispatch(getCountryDetails(id));\n    }, [dispatch,id])\n\n    return (\n        <div>\n            <Nav />\n            {\n                countryDetails.length !== 0 ?\n                    (<div id={style.detail}>\n                        <div id={style.name}>{countryDetails.name}</div>\n                        <div id={style.id}>({countryDetails.id})</div>\n                        <img id={style.flag} src={countryDetails.flag} alt=\"flag not found\" width=\"150px\" />\n                        <div className={style.continent}>\n                            <div className={style.region}>{countryDetails.region}</div>\n                            {countryDetails.subregion &&\n                                <div className={style.subregion}>{countryDetails.subregion}</div>}\n                        </div>\n\n\n                        <div className={style.dataGrid}>\n                            <div id={style.data}>\n                                <span className={style.dataLabel}>Capital</span>\n                                <span className={style.dataValue}>{countryDetails.capital}</span>\n                            </div>\n                            <div id={style.data}>\n                                <span className={style.dataLabel}>Area</span>\n                                <span className={style.dataValue}>{\n                                    countryDetails.area > 1000000\n                                        ? (Math.round((countryDetails.area / 1000000) * 100) / 100 + ' M Km2') // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n                                        : Number(countryDetails.area).toLocaleString() + ' Km2'}</span>\n                            </div>\n\n                            <div id={style.data}>\n                                <span className={style.dataLabel}>Population</span>\n                                <span className={style.dataValue}>{Number(countryDetails.population).toLocaleString()}</span>\n                            </div>\n                        </div>\n\n\n                        <div className={style.activities}>\n                            {\n                                countryDetails.activities &&\n                                countryDetails.activities.map(act => (\n                                    <ActivityCard\n                                        name={act.name}\n                                        difficulty={act.difficulty}\n                                        duration={act.duration}\n                                        season={act.season}\n                                    />\n                                ))\n                            }\n                        </div>\n                    </div>\n                    ) : <div className={style.loader}></div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}