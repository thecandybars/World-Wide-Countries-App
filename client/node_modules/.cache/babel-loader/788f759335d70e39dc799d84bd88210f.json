{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const countryDetails = useSelector(state => state.countryDetails); // InicializaciÃ³n\n\n  useEffect(() => {\n    dispatch(getCountryDetails(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.detail,\n      children: countryDetails.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.countryDetail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.name,\n          children: countryDetails.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.id,\n          children: [\"(\", countryDetails.id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: style.flag,\n          src: countryDetails.flag,\n          alt: \"flag not found\",\n          width: \"150px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.continent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.region,\n            children: countryDetails.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this), countryDetails.subregion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.dataLabel,\n            children: countryDetails.subregion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.data,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.dataRow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataLabel,\n              children: \"Capital: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataValue,\n              children: countryDetails.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.dataRow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataLabel,\n              children: \"Area: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataValue,\n              children: countryDetails.area > 1000000 ? Math.round(countryDetails.area / 1000000 * 100) / 100 + ' M Km2' // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n              : Number(countryDetails.area).toLocaleString() + ' Km2'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.dataRow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataLabel,\n              children: \"Population: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.dataValue,\n              children: Number(countryDetails.population).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), countryDetails.activities && countryDetails.activities.map(act => /*#__PURE__*/_jsxDEV(ActivityCard, {\n          name: act.name,\n          difficulty: act.difficulty,\n          duration: act.duration,\n          season: act.season\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryDetails, \"LuEbhcsWXBVHbEyPdPjZ7++aAwU=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/CountryDetails.jsx"],"names":["React","useEffect","useDispatch","useSelector","useParams","getCountryDetails","ActivityCard","style","Nav","CountryDetails","dispatch","id","countryDetails","state","detail","length","countryDetail","name","flag","continent","region","subregion","dataLabel","data","dataRow","dataValue","capital","area","Math","round","Number","toLocaleString","population","activities","map","act","difficulty","duration","season","loader"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountryDetails } from \"../actions\";\nimport ActivityCard from \"./ActivityCard\";\nimport style from './CountryDetails.module.css';\nimport Nav from \"./Nav\";\n\nexport default function CountryDetails() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const countryDetails = useSelector((state) => state.countryDetails);\n\n    // InicializaciÃ³n\n    useEffect(() => {\n        dispatch(getCountryDetails(id));\n    }, [])\n\n    return (\n        <div>\n            <Nav />\n                <div id={style.detail}>\n                    {\n                        countryDetails.length !== 0 ?\n                            (<div id={style.countryDetail}>\n                                {/* {countryDetails.flag_icon} */}\n                                <div id={style.name}>{countryDetails.name}</div>\n                                <div id={style.id}>({countryDetails.id})</div>\n                                <img id={style.flag} src={countryDetails.flag} alt=\"flag not found\" width=\"150px\" />\n                                <div className={style.continent}>\n                                    {/* <span className={style.dataLabel}>Region : </span> */}\n                                    <div className={style.region}>{countryDetails.region}</div>\n                                    {countryDetails.subregion &&\n                                        <div className={style.dataLabel}>{countryDetails.subregion}</div>}\n                                </div>\n\n                                <div id={style.data}>\n\n                                    <div className={style.dataRow}>\n                                        <span className={style.dataLabel}>Capital: </span>\n                                        <span className={style.dataValue}>{countryDetails.capital}</span></div>\n                                    <div className={style.dataRow}>\n                                        <span className={style.dataLabel}>Area: </span>\n                                        <span className={style.dataValue}>{\n                                            countryDetails.area > 1000000\n                                                ? (Math.round((countryDetails.area / 1000000) * 100) / 100 + ' M Km2') // ROUND((area/millon)*digitos dec)/digitos dec = M Km2\n                                                : Number(countryDetails.area).toLocaleString() + ' Km2'}</span></div>\n                                    <div className={style.dataRow}>\n                                        <span className={style.dataLabel}>Population: </span>\n                                        <span className={style.dataValue}>{Number(countryDetails.population).toLocaleString()}</span></div>\n                                </div>\n                                {\n                                    countryDetails.activities &&\n                                    countryDetails.activities.map(act => (\n                                        <ActivityCard\n                                            name={act.name}\n                                            difficulty={act.difficulty}\n                                            duration={act.duration}\n                                            season={act.season}\n                                        />\n                                    ))\n                                }\n                            </div>\n                            ) : <div className={style.loader}></div>\n                    }\n                </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}