{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, countriesTools } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Paging from \"./Paging\";\nimport style from \"./Home.module.css\";\nimport \"./Global.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  // ACTIONS\n  const dispatch = useDispatch(); // LOCAL STATES\n\n  const [filter, setFilter] = useState({\n    region: \"\",\n    activity: \"\"\n  });\n  const [order, setOrder] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [regionList, setRegionList] = useState([]); // GLOBAL STATE\n\n  const countries = useSelector(state => state.countries, () => {});\n  const activitiesList = useSelector(state => state.activitiesList); // Seria interesante hacer orderList dinámica\n  // const orderList = ['none', 'asc', 'des', 'popUp', 'popDown'];\n  // https://www.geeksforgeeks.org/how-to-set-default-value-in-select-using-reactjs/\n  /////// INITIALIZATION\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, []); // Cuando countries esta cargado:\n\n  useEffect(() => {\n    if (allCountries.length === 0) {\n      // Comprobación, para que esto suceda una sola vez.\n      setAllCountries([...countries]);\n      setRegionList(countries.map(obj => obj.region) // convierte el obj en arr\n      .filter((item, index, arr) => arr.indexOf(item) === index)); // filtra repeticiones);\n\n      pages(1);\n    }\n  }, [countries]); // Re-inicialización forzada con botón\n\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  } ///// PAGING\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const [totalPages, setTotalPages] = useState(0);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = page => {\n    //////// Solo usar para ese requisito extraño del PI !!!\n    // if (page === 1) setCountriesXPage(9);  \n    // else setCountriesXPage(10);\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    if (countries) {\n      const calcTotalPages = Math.ceil(countries.length / countriesXPage);\n      setTotalPages(calcTotalPages);\n      if (currentPage > calcTotalPages) setCurrentPage(1);\n    }\n  }, [countries, countriesXPage]); /////////////// COUNTRIES TOOLS : FILTER, SEARCH && ORDER : se podria modularizar !!!!!!\n\n  useEffect(() => {\n    dispatch(countriesTools(filter, searchText, order, allCountries));\n    pages(currentPage);\n  }, [order, filter, searchText]); // FILTER\n  // Es un obj tipo { region:'Asia', activity:'Morder' }\n\n  const regionFilter = useRef();\n  const activityFilter = useRef();\n\n  function handleFilter(e) {\n    setFilter({ ...filter,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleClearFilters() {\n    setFilter({});\n    regionFilter.current.value = '';\n    activityFilter.current.value = '';\n  } // SEARCH\n\n\n  const inputSearch = useRef();\n\n  function handleResetButton(e) {\n    e.preventDefault();\n    setSearchText('');\n    inputSearch.current.value = '';\n  }\n\n  function handleSearchText(e) {\n    setSearchText(e.target.value);\n  } // ORDER\n\n\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      countriesXPage: countriesXPage,\n      setCountriesXPage: setCountriesXPage,\n      handleReloadDB: handleReloadDB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.order,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sort:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"asc\",\n        name: \"order\",\n        value: \"ASC\",\n        onClick: handleOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"des\",\n        name: \"order\",\n        value: \"DES\",\n        onClick: handleOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"popUp\",\n        name: \"order\",\n        value: \"PopUp\",\n        onClick: handleOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"popDown\",\n        name: \"order\",\n        value: \"PopDown\",\n        onClick: handleOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.search,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchText\",\n        name: \"searchText\",\n        onChange: handleSearchText,\n        ref: inputSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: handleResetButton,\n        value: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.filter,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"region\",\n        onChange: handleFilter,\n        ref: regionFilter,\n        defaultValue: \"Filter by region\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"Filter by region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), regionList && regionList.map(reg => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reg,\n            children: reg\n          }, reg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"activity\",\n        id: \"\",\n        onChange: handleFilter,\n        ref: activityFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          children: \"Filter by activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), activitiesList && activitiesList.map(act => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: act,\n            children: act\n          }, act, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: handleClearFilters,\n        value: \"Clear filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paging, {\n      totalPages: totalPages,\n      currentPage: currentPage,\n      pages: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.countries,\n      children: countries.length ? pageCountries.map(country => {\n        return /*#__PURE__*/_jsxDEV(CountryCard, {\n          name: country.name,\n          region: country.region,\n          flag: country.flag,\n          flag_icon: country.flag_icon,\n          id: country.id\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"uXejcjlwpQbrxYB3/Y4UzA+wxW0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","getCountries","getActivitiesList","countriesTools","Link","Nav","CountryCard","Paging","style","Home","dispatch","filter","setFilter","region","activity","order","setOrder","searchText","setSearchText","allCountries","setAllCountries","regionList","setRegionList","countries","state","activitiesList","length","map","obj","item","index","arr","indexOf","pages","handleReloadDB","e","preventDefault","currentPage","setCurrentPage","countriesXPage","setCountriesXPage","totalPages","setTotalPages","lastCountry","firstCountry","pageCountries","slice","page","calcTotalPages","Math","ceil","regionFilter","activityFilter","handleFilter","target","name","value","handleClearFilters","current","inputSearch","handleResetButton","handleSearchText","handleOrder","id","container","search","reg","act","country","flag","flag_icon","loader"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, countriesTools } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Paging from \"./Paging\";\nimport style from \"./Home.module.css\";\nimport \"./Global.css\";\n\nexport default function Home() {\n  // ACTIONS\n  const dispatch = useDispatch();\n  // LOCAL STATES\n  const [filter, setFilter] = useState({ region: \"\", activity: \"\" });\n  const [order, setOrder] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [regionList, setRegionList] = useState([]);\n  // GLOBAL STATE\n  const countries = useSelector((state) => state.countries, () => { });\n  const activitiesList = useSelector((state) => state.activitiesList);\n\n  // Seria interesante hacer orderList dinámica\n  // const orderList = ['none', 'asc', 'des', 'popUp', 'popDown'];\n  // https://www.geeksforgeeks.org/how-to-set-default-value-in-select-using-reactjs/\n\n  /////// INITIALIZATION\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, [])\n  // Cuando countries esta cargado:\n  useEffect(() => {\n    if (allCountries.length === 0) {  // Comprobación, para que esto suceda una sola vez.\n      setAllCountries([...countries]);\n      setRegionList(countries\n        .map((obj) => obj.region) // convierte el obj en arr\n        .filter((item, index, arr) => arr.indexOf(item) === index)); // filtra repeticiones);\n      pages(1);\n    }\n  }, [countries])\n  // Re-inicialización forzada con botón\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }\n\n  ///// PAGING\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const [totalPages, setTotalPages] = useState(0);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = (page) => {\n    //////// Solo usar para ese requisito extraño del PI !!!\n    // if (page === 1) setCountriesXPage(9);  \n    // else setCountriesXPage(10);\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    if (countries) {\n      const calcTotalPages = Math.ceil(countries.length / countriesXPage)\n      setTotalPages(calcTotalPages);\n      if (currentPage > calcTotalPages) setCurrentPage(1);\n    }\n  }, [countries, countriesXPage]);\n  \n  /////////////// COUNTRIES TOOLS : FILTER, SEARCH && ORDER : se podria modularizar !!!!!!\n  useEffect(() => {\n    dispatch(countriesTools(filter, searchText, order, allCountries));\n    pages(currentPage);\n  }, [order, filter, searchText]);\n\n  // FILTER\n  // Es un obj tipo { region:'Asia', activity:'Morder' }\n  const regionFilter = useRef();\n  const activityFilter = useRef();\n\n  function handleFilter(e) {\n    setFilter({ ...filter, [e.target.name]: e.target.value });\n  }\n  function handleClearFilters() {\n    setFilter({});\n    regionFilter.current.value = '';\n    activityFilter.current.value = '';\n  }\n  // SEARCH\n  const inputSearch = useRef();\n\n  function handleResetButton(e) {\n    e.preventDefault();\n    setSearchText('');\n    inputSearch.current.value = '';\n  }\n  function handleSearchText(e) {\n    setSearchText(e.target.value);\n  }\n  // ORDER\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  }\n\n  return (\n    <div id={style.container}>\n\n      <Nav \n        countriesXPage={countriesXPage}\n        setCountriesXPage={setCountriesXPage}\n        handleReloadDB={handleReloadDB}\n      />\n\n     \n\n      {/* <h1>Home de Countries</h1> */}\n      {/* <button onClick={(e) => { handleReloadDB(e) }}>reload DB</button> */}\n\n      <div id={style.order}>\n        <label>Sort:</label>\n        {/* SELECT ORDER */}\n        <input type=\"button\" id=\"asc\" name=\"order\" value=\"ASC\" onClick={handleOrder} />\n        <input type=\"button\" id=\"des\" name=\"order\" value=\"DES\" onClick={handleOrder} />\n        <input type=\"button\" id=\"popUp\" name=\"order\" value=\"PopUp\" onClick={handleOrder} />\n        <input type=\"button\" id=\"popDown\" name=\"order\" value=\"PopDown\" onClick={handleOrder} />\n      </div>\n\n      {/* SEARCH TEXT */}\n      <div id={style.search}>\n        <label>Search:</label>\n        <input type=\"text\" id=\"searchText\" name=\"searchText\" onChange={handleSearchText} ref={inputSearch} />\n        <input type=\"button\" onClick={handleResetButton} value=\"Reset\" />\n      </div>\n\n      <div id={style.filter}>\n        <label>Filter:</label>\n        {/* SELECT REGION */}\n        {/* MIRA https://www.geeksforgeeks.org/how-to-set-default-value-in-select-using-reactjs/ */}\n        <select name=\"region\" onChange={handleFilter} ref={regionFilter} defaultValue='Filter by region'>\n          <option disabled>Filter by region</option>\n          <option value=\"\">All regions</option>\n          {\n            regionList && regionList.map((reg) => {\n              return (<option value={reg} key={reg} >{reg}</option>);\n            })}\n        </select>\n\n        {/* SELECT ACTIVITY  */}\n        <select name=\"activity\" id=\"\" onChange={handleFilter} ref={activityFilter}>\n          <option value=\"\" selected disabled hidden>Filter by activity</option>\n          <option value=\"\" >All activities</option>\n          {\n            activitiesList && activitiesList.map((act) => {\n              return (<option value={act} key={act} >{act}</option>);\n            })}\n        </select>\n        <input type=\"button\" onClick={handleClearFilters} value=\"Clear filters\" />\n      </div>\n\n      {/* PAGING  */}\n      <Paging\n        totalPages={totalPages}\n        currentPage={currentPage}\n        pages={pages}\n      />\n\n      {/* COUNTRY CARDS  */}\n      <div id={style.countries}>\n        {countries.length ?\n          (pageCountries.map((country) => {\n            return (\n              <CountryCard\n                key={country.id}\n                name={country.name}\n                region={country.region}\n                flag={country.flag}\n                flag_icon={country.flag_icon}\n                id={country.id}\n              />\n            );\n          }))\n          : (<div className={style.loader}></div>)}\n      </div>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}