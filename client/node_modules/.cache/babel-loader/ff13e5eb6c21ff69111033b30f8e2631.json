{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, filterOrderCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); // LOCAL STATES\n\n  const [filter, setFilter] = useState({\n    region: \"\",\n    activity: \"\"\n  });\n  const [order, setOrder] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [regionList, setRegionList] = useState([]);\n  const countries = useSelector(state => state.countries, () => {});\n  const activitiesList = useSelector(state => state.activitiesList); // Paginado\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = page => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);else setCountriesXPage(10);\n  }; ////////////////////////////// Inicialización\n\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, []); // Llena allCountries una sola vez, cuando countries esta cargado\n\n  useEffect(() => {\n    if (allCountries.length === 0) {\n      setAllCountries([...countries]);\n      setRegionList(getRegionsList());\n    }\n  }, [countries]); // Inicialización forzada con botón\n\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  } /////////////////////////////////////////////////////////////\n\n\n  function getRegionsList() {\n    return countries.map(obj => obj.region) // convierte el obj en arr\n    .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  } //////////////////////////// ORDER && FILTER\n\n\n  useEffect(() => {\n    dispatch(filterOrderCountries(order, filter, allCountries));\n  }, [order, filter]); // FILTER\n\n  function handleFilter(e) {\n    setFilter({ ...filter,\n      [e.target.name]: e.target.value\n    }); // { region:'Asia', activity:'Cagar' }\n  } // ORDER\n\n\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  } //////////////////////////// SEARCH\n\n\n  function handleSearchButton() {\n    e.preventDefault();\n    dispatch(searchCountry(searchText));\n  }\n\n  function handleSearchText(e) {\n    setSearchText(e.target.value);\n  } // La barra de botones se podria modularizar\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/activity\",\n      children: \"Crear actividad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home de Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleReloadDB(e);\n      },\n      children: \"reload DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"asc\",\n          name: \"order\",\n          value: \"ASC\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"des\",\n          name: \"order\",\n          value: \"DES\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Des\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"popUp\",\n          name: \"order\",\n          value: \"PopUp\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PopUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"popDown\",\n          name: \"order\",\n          value: \"PopDown\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PopDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchText\",\n          name: \"searchText\",\n          onChange: handleSearchText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onclick: handleSearchButton,\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"region\",\n        id: \"\",\n        onChange: handleFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"* ALL *\"\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), regionList && regionList.map(reg => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reg,\n            children: reg\n          }, reg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"activity\",\n        id: \"\",\n        onChange: handleFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"* ALL *\"\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), activitiesList && activitiesList.map(act => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: act,\n            children: act\n          }, act, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pages, {\n        countriesXPage: countriesXPage,\n        totalCountries: countries.length,\n        pages: pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"countries\",\n        children: pageCountries ? pageCountries.map(country => {\n          return /*#__PURE__*/_jsxDEV(CountryCard, {\n            name: country.name,\n            region: country.region,\n            flag: country.flag,\n            id: country.id\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No hay paises para mostrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"rIUdM8xkMoRC8QXJCsvafkNj1MU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getCountries","getActivitiesList","filterOrderCountries","Link","CountryCard","Pages","Home","dispatch","filter","setFilter","region","activity","order","setOrder","searchText","setSearchText","allCountries","setAllCountries","regionList","setRegionList","countries","state","activitiesList","currentPage","setCurrentPage","countriesXPage","setCountriesXPage","lastCountry","firstCountry","pageCountries","slice","pages","page","length","getRegionsList","handleReloadDB","e","preventDefault","map","obj","item","index","arr","indexOf","handleFilter","target","name","value","handleOrder","id","handleSearchButton","searchCountry","handleSearchText","reg","act","country","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, filterOrderCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  // LOCAL STATES\n  const [filter, setFilter] = useState({ region: \"\", activity: \"\" });\n  const [order, setOrder] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [regionList, setRegionList] = useState([]);\n\n  const countries = useSelector((state) => state.countries, () => { });\n  const activitiesList = useSelector((state) => state.activitiesList);\n\n  // Paginado\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = (page) => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);\n    else setCountriesXPage(10);\n  };\n\n  ////////////////////////////// Inicialización\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, [])\n  // Llena allCountries una sola vez, cuando countries esta cargado\n  useEffect(() => {\n    if (allCountries.length === 0) {\n      setAllCountries([...countries]);\n      setRegionList(getRegionsList());\n    }\n  }, [countries])\n\n  // Inicialización forzada con botón\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }\n  /////////////////////////////////////////////////////////////\n\n  function getRegionsList() {\n    return countries\n      .map((obj) => obj.region) // convierte el obj en arr\n      .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  }\n\n  //////////////////////////// ORDER && FILTER\n\n  useEffect(() => {\n    dispatch(filterOrderCountries(order, filter, allCountries));\n  }, [order, filter]);\n\n  // FILTER\n  function handleFilter(e) {\n    setFilter({ ...filter, [e.target.name]: e.target.value }); // { region:'Asia', activity:'Cagar' }\n  }\n  // ORDER\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  }\n\n  //////////////////////////// SEARCH\n  function handleSearchButton() {\n    e.preventDefault();\n    dispatch(searchCountry(searchText));\n  }\n  function handleSearchText(e) {\n    setSearchText(e.target.value);\n  }\n\n  // La barra de botones se podria modularizar\n  return (\n    <div>\n      <Link to=\"/activity\">Crear actividad</Link>\n      <h1>Home de Countries</h1>\n      <button onClick={(e) => { handleReloadDB(e) }}>reload DB</button>\n      <div>\n        <div>\n          <input type=\"radio\" id=\"asc\" name=\"order\" value=\"ASC\" onChange={handleOrder} />\n          <label>Asc</label>\n          <input type=\"radio\" id=\"des\" name=\"order\" value=\"DES\" onChange={handleOrder} />\n          <label>Des</label>\n          <input type=\"radio\" id=\"popUp\" name=\"order\" value=\"PopUp\" onChange={handleOrder} />\n          <label>PopUp</label>\n          <input type=\"radio\" id=\"popDown\" name=\"order\" value=\"PopDown\" onChange={handleOrder} />\n          <label>PopDown</label>\n        </div>\n        <form action=\"\">\n          <label>Search:</label>\n          <input type=\"text\" id=\"searchText\" name=\"searchText\" onChange={handleSearchText}></input>\n          <input type=\"button\" onclick={handleSearchButton} value=\"Search\" />\n        </form>\n\n        {/* SELECT REGION */}\n        <select name=\"region\" id=\"\" onChange={handleFilter}>\n          <option value='all' key='all' >* ALL *</option>\n          {\n            regionList && regionList.map((reg) => {\n              return (<option value={reg} key={reg} >{reg}</option>);\n            })}\n        </select>\n\n        {/* SELECT ACTIVITY  */}\n        <select name=\"activity\" id=\"\" onChange={handleFilter}>\n          <option value='all' key='all' >* ALL *</option>\n          {\n            activitiesList && activitiesList.map((act) => {\n              return (<option value={act} key={act} >{act}</option>);\n            })}\n        </select>\n\n        <Pages\n          countriesXPage={countriesXPage}\n          totalCountries={countries.length}\n          pages={pages}\n        />\n\n        <div id=\"countries\">\n          {pageCountries ?\n            (pageCountries.map((country) => {\n              return (\n                <CountryCard\n                  key={country.id}\n                  name={country.name}\n                  region={country.region}\n                  flag={country.flag}\n                  id={country.id}\n                />\n              );\n            }))\n            : (<h2>No hay paises para mostrar</h2>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}