{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, filterOrderCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); // LOCAL STATES\n\n  const [order, setOrder] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [filter, setFilter] = useState({\n    region: \"\",\n    activity: \"\"\n  });\n  const countries = useSelector(state => state.countries, () => {});\n  const activitiesList = useSelector(state => state.activitiesList); // Paginado\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = page => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);else setCountriesXPage(10);\n  }; ////////////////////////////// Inicialización\n\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, []); // Llena allCountries una sola vez, cuando countries esta cargado\n\n  useEffect(() => {\n    if (allCountries.length === 0) {\n      setAllCountries([...countries]);\n      getRegionsList();\n    }\n  }, [countries]); // Inicialización forzada con botón\n\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  } /////////////////////////////////////////////////////////////\n\n\n  function getRegionsList() {\n    return countries.map(obj => obj.region) // convierte el obj en arr\n    .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  } //////////////////////////// ORDER && FILTER\n\n\n  useEffect(() => {\n    dispatch(filterOrderCountries(order, filter, allCountries));\n  }, [order, filter]); // FILTER\n\n  function handleFilter(e) {\n    setFilter({ ...filter,\n      [e.target.name]: e.target.value\n    }); // { region:'Asia', activity:'Cagar' }\n  } // ORDER\n\n\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  } ///////////////////////////////////////////////\n  // La barra de botones se podria modularizar\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/activity\",\n      children: \"Crear actividad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home de Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleReloadDB(e);\n      },\n      children: \"reload DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"asc\",\n          name: \"order\",\n          value: \"ASC\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"des\",\n          name: \"order\",\n          value: \"DES\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Des\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"popUp\",\n          name: \"order\",\n          value: \"PopUp\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PopUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"popDown\",\n          name: \"order\",\n          value: \"PopDown\",\n          onChange: handleOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PopDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"region\",\n        id: \"\",\n        onChange: handleFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"* ALL *\"\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), regionList && regionList.map(reg => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reg,\n            children: reg\n          }, reg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"activity\",\n        id: \"\",\n        onChange: handleFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"* ALL *\"\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), activitiesList && activitiesList.map(act => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: act,\n            children: act\n          }, act, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pages, {\n        countriesXPage: countriesXPage,\n        totalCountries: countries.length,\n        pages: pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"countries\",\n        children: pageCountries ? pageCountries.map(country => {\n          return /*#__PURE__*/_jsxDEV(CountryCard, {\n            name: country.name,\n            region: country.region,\n            flag: country.flag,\n            id: country.id\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No hay paises para mostrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"4eIm64N65cz6tCmFNZo5xWriwgk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andres/Documents/Henry/bootcamp/PI-Countries-main/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getCountries","getActivitiesList","filterOrderCountries","Link","CountryCard","Pages","Home","dispatch","order","setOrder","allCountries","setAllCountries","filter","setFilter","region","activity","countries","state","activitiesList","currentPage","setCurrentPage","countriesXPage","setCountriesXPage","lastCountry","firstCountry","pageCountries","slice","pages","page","length","getRegionsList","handleReloadDB","e","preventDefault","map","obj","item","index","arr","indexOf","handleFilter","target","name","value","handleOrder","id","regionList","reg","act","country","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivitiesList, filterOrderCountries } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport CountryCard from \"./CountryCard.jsx\";\nimport Pages from \"./Pages\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  // LOCAL STATES\n  const [order, setOrder] = useState('');\n  const [allCountries, setAllCountries] = useState([]);\n  const [filter, setFilter] = useState({ region: \"\", activity: \"\" });\n\n  const countries = useSelector((state) => state.countries, () => { });\n  const activitiesList = useSelector((state) => state.activitiesList);\n\n  // Paginado\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesXPage, setCountriesXPage] = useState(9);\n  const lastCountry = currentPage * countriesXPage;\n  const firstCountry = lastCountry - countriesXPage;\n  const pageCountries = countries.slice(firstCountry, lastCountry);\n\n  const pages = (page) => {\n    setCurrentPage(page);\n    if (page === 1) setCountriesXPage(9);\n    else setCountriesXPage(10);\n  };\n\n  ////////////////////////////// Inicialización\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }, [])\n  // Llena allCountries una sola vez, cuando countries esta cargado\n  useEffect(() => {\n    if (allCountries.length===0) {\n      setAllCountries([...countries]);\n      getRegionsList();\n    }\n  }, [countries])\n\n  // Inicialización forzada con botón\n  function handleReloadDB(e) {\n    e.preventDefault();\n    setAllCountries([]);\n    dispatch(getCountries());\n    dispatch(getActivitiesList());\n  }\n  /////////////////////////////////////////////////////////////\n\n  function getRegionsList() {\n    return countries\n      .map((obj) => obj.region) // convierte el obj en arr\n      .filter((item, index, arr) => arr.indexOf(item) === index); // filtra repeticiones\n  }\n\n  //////////////////////////// ORDER && FILTER\n\n  useEffect(() => {\n    dispatch(filterOrderCountries(order, filter, allCountries)); \n  }, [order,filter]);\n\n  // FILTER\n  function handleFilter(e) {\n    setFilter({ ...filter, [e.target.name]: e.target.value }); // { region:'Asia', activity:'Cagar' }\n  }\n  // ORDER\n  function handleOrder(e) {\n    setOrder(e.target.id);\n  }\n  ///////////////////////////////////////////////\n\n  // La barra de botones se podria modularizar\n  return (\n    <div>\n      <Link to=\"/activity\">Crear actividad</Link>\n      <h1>Home de Countries</h1>\n      <button onClick={(e) => { handleReloadDB(e) }}>reload DB</button>\n      <div>\n        <div>\n          <input type=\"radio\" id=\"asc\" name=\"order\" value=\"ASC\" onChange={handleOrder} />\n          <label>Asc</label>\n          <input type=\"radio\" id=\"des\" name=\"order\" value=\"DES\" onChange={handleOrder} />\n          <label>Des</label>\n          <input type=\"radio\" id=\"popUp\" name=\"order\" value=\"PopUp\" onChange={handleOrder} />\n          <label>PopUp</label>\n          <input type=\"radio\" id=\"popDown\" name=\"order\" value=\"PopDown\" onChange={handleOrder} />\n          <label>PopDown</label>\n        </div>\n\n        {/* <label>Search:</label>\n        <input type=\"text\" id=\"search\" name=\"search\"></input>\n        <button onSubmit={handleSearch}>Serch</button> */}\n\n        {/* <select name=\"region\" onChange={handleFilter}>\n          <option id=\"all\" value=\"all\">*ALL*</option>\n          <option id=\"Asia\" value=\"Asia\">Asia</option>\n          <option id=\"Oceania\" value=\"Oceania\">Oceania</option>\n          <option id=\"Americas\" value=\"Americas\">Americas</option>\n          <option id=\"Europe\" value=\"Europe\">Europe</option>\n          <option id=\"Africa\" value=\"Africa\">Africa</option>\n          <option id=\"Antartic\" value=\"Antartic\">Antartic</option>\n        </select> */}\n\n        <select name=\"region\" id=\"\" onChange={handleFilter}>\n        <option value='all' key='all' >* ALL *</option>\n          {\n            regionList && regionList.map((reg) => {\n              return (<option value={reg} key={reg} >{reg}</option>);\n            })}\n        </select>\n        \n        <select name=\"activity\" id=\"\" onChange={handleFilter}>\n        <option value='all' key='all' >* ALL *</option>\n          {\n            activitiesList && activitiesList.map((act) => {\n              return (<option value={act} key={act} >{act}</option>);\n            })}\n        </select>\n\n        <Pages\n          countriesXPage={countriesXPage}\n          totalCountries={countries.length}\n          pages={pages}\n        />\n\n        <div id=\"countries\">\n          {pageCountries ?\n            (pageCountries.map((country) => {\n              return (\n                <CountryCard\n                  key={country.id}\n                  name={country.name}\n                  region={country.region}\n                  flag={country.flag}\n                  id={country.id}\n                />\n              );\n            }))\n            : (<h2>No hay paises para mostrar</h2>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}